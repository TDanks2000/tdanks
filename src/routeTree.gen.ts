/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const PokemonCatcherLazyImport = createFileRoute('/pokemon-catcher')()
const IndexLazyImport = createFileRoute('/')()
const MentalHealthQuoteLazyImport = createFileRoute('/mental-health/quote')()

// Create/Update Routes

const PokemonCatcherLazyRoute = PokemonCatcherLazyImport.update({
  id: '/pokemon-catcher',
  path: '/pokemon-catcher',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/pokemon-catcher.lazy').then((d) => d.Route),
)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const MentalHealthQuoteLazyRoute = MentalHealthQuoteLazyImport.update({
  id: '/mental-health/quote',
  path: '/mental-health/quote',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/mental-health/quote.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/pokemon-catcher': {
      id: '/pokemon-catcher'
      path: '/pokemon-catcher'
      fullPath: '/pokemon-catcher'
      preLoaderRoute: typeof PokemonCatcherLazyImport
      parentRoute: typeof rootRoute
    }
    '/mental-health/quote': {
      id: '/mental-health/quote'
      path: '/mental-health/quote'
      fullPath: '/mental-health/quote'
      preLoaderRoute: typeof MentalHealthQuoteLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/pokemon-catcher': typeof PokemonCatcherLazyRoute
  '/mental-health/quote': typeof MentalHealthQuoteLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/pokemon-catcher': typeof PokemonCatcherLazyRoute
  '/mental-health/quote': typeof MentalHealthQuoteLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/pokemon-catcher': typeof PokemonCatcherLazyRoute
  '/mental-health/quote': typeof MentalHealthQuoteLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/pokemon-catcher' | '/mental-health/quote'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/pokemon-catcher' | '/mental-health/quote'
  id: '__root__' | '/' | '/pokemon-catcher' | '/mental-health/quote'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  PokemonCatcherLazyRoute: typeof PokemonCatcherLazyRoute
  MentalHealthQuoteLazyRoute: typeof MentalHealthQuoteLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  PokemonCatcherLazyRoute: PokemonCatcherLazyRoute,
  MentalHealthQuoteLazyRoute: MentalHealthQuoteLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/pokemon-catcher",
        "/mental-health/quote"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/pokemon-catcher": {
      "filePath": "pokemon-catcher.lazy.tsx"
    },
    "/mental-health/quote": {
      "filePath": "mental-health/quote.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
